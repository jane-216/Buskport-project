db.exec(`
CREATE TABLE IF NOT EXISTS posts (
id INTEGER PRIMARY KEY AUTOINCREMENT,
user_id INTEGER NOT NULL,
title TEXT NOT NULL,
content TEXT NOT NULL,
created_at TEXT NOT NULL,
FOREIGN KEY (user_id) REFERENCES users(id)
);
`);


export default db;

const insertPost = db.prepare(`
INSERT INTO posts (user_id, title, content, created_at)
VALUES (@user_id, @title, @content, @created_at)
`);
const listPosts = db.prepare(`SELECT * FROM posts ORDER BY id DESC`);
const findPost = db.prepare(`SELECT * FROM posts WHERE id = ?`);
const deletePostStmt = db.prepare(`DELETE FROM posts WHERE id = ? AND user_id = ?`);


// 게시판 목록
app.get('/board', (req, res) => {
const posts = listPosts.all();
res.render('board', { user: req.user, posts });
});


// 새 글 작성 폼
app.get('/board/new', (req, res) => {
res.render('board_new', { user: req.user });
});


// 글 작성 처리
app.post('/board/new', (req, res) => {
const { title, content } = req.body;
if (!title || !content) return res.status(400).send('제목과 내용을 입력하세요.');


insertPost.run({
user_id: req.user.id,
title,
content,
created_at: new Date().toISOString()
});


res.redirect('/board');
});


// 글 상세 보기
app.get('/board/:id', (req, res) => {
const post = findPost.get(req.params.id);
if (!post) return res.status(404).send('게시글을 찾을 수 없습니다.');
res.render('board_detail', { user: req.user, post });
});


// 글 삭제
app.post('/board/:id/delete', (req, res) => {
deletePostStmt.run(req.params.id, req.user.id);
res.redirect('/board');
});



<!doctype html>
<html lang="ko">
<head>
<meta charset="utf-8" />
<title>게시판</title>
<link rel="stylesheet" href="/public/styles.css" />
</head>
<body>
<main class="container">
<header>
<h1>게시판</h1>
<a href="/board/new">새 글 작성</a>
<a href="/profile">내 프로필</a>
</header>


<section>
<% if (posts.length === 0) { %>
<p>게시글이 없습니다.</p>
<% } else { %>
<ul>
<% posts.forEach(p => { %>
<li>
<a href="/board/<%= p.id %>"><%= p.title %></a>
<small>(<%= new Date(p.created_at).toLocaleString() %>)</small>
</li>
<% }) %>
</ul>
<% } %>
</section>
</main>
</body>
</html>



<!doctype html>
<html lang="ko">
<head>
<meta charset="utf-8" />
<title>새 글 작성</title>
<link rel="stylesheet" href="/public/styles.css" />
</head>
<body>
<main class="container">
<h1>새 글 작성</h1>
<form action="/board/new" method="post">
<label class="field">
<span>제목</span>
<input type="text" name="title" required />
</label>
<label class="field">
<span>내용</span>
<textarea name="content" rows="6" required></textarea>
</label>
<button type="submit">작성하기</button>
</form>
<p><a href="/board">목록으로</a></p>
</main>
</body>
</html>



db.exec(`
CREATE TABLE IF NOT EXISTS posts (
id INTEGER PRIMARY KEY,
user_id INTEGER NOT NULL,
title TEXT NOT NULL,
content TEXT NOT NULL,
created_at TEXT NOT NULL,
updated_at TEXT NOT NULL,
FOREIGN KEY (user_id) REFERENCES users(id)
);


CREATE TABLE IF NOT EXISTS comments (
id INTEGER PRIMARY KEY,
post_id INTEGER NOT NULL,
user_id INTEGER NOT NULL,
body TEXT NOT NULL,
created_at TEXT NOT NULL,
FOREIGN KEY (post_id) REFERENCES posts(id),
FOREIGN KEY (user_id) REFERENCES users(id)
);
`);


